---
# From https://community.home-assistant.io/t/how-to-make-active-timers-survive-a-restart/146248
# How to make active timers survive a restart

input_boolean:
  homeassistant_recently_started:
    name: Home Assistant has recently started up
    initial: 'off'

input_text:
  active_timers:
    name: Active Timers
  paused_timers:
    name: Paused Timers

automation:
  - alias: 'Hass Startup Notification'
    initial_state: 'on'
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.homeassistant_recently_started
      - delay: '00:00:30'
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.homeassistant_recently_started

  - alias: 'Active Timers Resume'
    trigger:
      platform: homeassistant
      event: start
    action:
      service: python_script.active_timers_resume

  - alias: 'Active Timers Save'
    trigger:
      platform: state
      entity_id:
        - timer.camera_alerts_disabled
        - timer.front_garage_light
        - timer.kitchenlight
        - timer.kitchenwork
        - timer.loadshedding_slot
        - timer.loungelight
        - timer.main_geyser
        - timer.outsidebacklight
        - timer.pool_pump
        - timer.pool_pump_grid_pause
        # - timer.vacuumautoresume
        # - timer.watersystem
    action:
      - service: input_text.set_value
        data_template:
          entity_id: input_text.active_timers
          value: >
            {% set ns = namespace(timers = '') %}
            {% for t in states.timer | selectattr('state', 'in', ['active','paused']) | list  %}
              {% set d = t.attributes.duration.split(':') %}
              {% if 'day' in d[0] %}
                {% set z = d[0].split(', ') %}
                {% set h = ((z[0].split()[0] | int) * 24 + (z[1].split(':')[0] | int)) * 3600 %}
              {% else %}
                {% set h = d[0] | int * 3600 %}
              {% endif %}
              {% set s = h + (d[1]|int*60) + (d[2]|int) %}
              {% set c = ',' if not loop.first else '' %}
              {% set ns.timers = ns.timers ~ '{}{} {}'.format(c, t.object_id, t.last_changed.timestamp()|int + s) %}
            {% endfor %}
            {{ ns.timers }}
