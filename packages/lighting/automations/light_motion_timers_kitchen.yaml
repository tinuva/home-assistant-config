---
input_boolean:
  kitchenwork:
    name: Kitchen Work

timer:
  # When calling the start service on a timer that is already running, it resets
  # the duration it will need to finish and restart the timer without triggering
  # a canceled or finished event. This, for example, makes it easy to create
  # timed lights that get triggered by motion. Starting a timer triggers a
  # started event unless the timer is paused, in that case, it triggers a
  # restarted event.
  kitchenlight:
    duration: "00:10:00"
    restore: true
  kitchenwork:
    duration: "01:00:00"
    restore: true

automation:
  ### Kitchen Lights
  # Timer end = Turn off
  - alias: Turn off Kitchen lights 10 minutes after trigger
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.kitchenlight
    condition:
      - condition: state
        entity_id: input_boolean.kitchenwork
        state: "off"
    action:
      - service: light.turn_off
        data:
          entity_id: light.kitchen_kitchen
          transition: 10

  ### Turn on Kitchen Lights when movement
  # Motion = Turn on
  - alias: Turn on Kitchen lights when there is movement
    trigger:
      - platform: state
        entity_id: binary_sensor.kitchen_pir
        to: "on"
    condition:
      - condition: and
        conditions:
          - condition: state # 'night' condition: from sunset until sunrise
            entity_id: sun.sun
            state: "below_horizon"
          - condition: state
            entity_id: input_boolean.kitchenwork
            state: "off"
          #- condition: numeric_state
          #  entity_id: sensor.illumination_7811dcb90d53
          #  below: 200
    action:
      - service: light.turn_on
        data_template:
          entity_id: light.kitchen_kitchen
          # transition: 10
          # brightness: >-
          #   {% set time = states('sensor.time') %}
          #   {%- if(is_state('input_boolean.kitchenwork','on')) -%}
          #   185
          #   {%- elif(is_state('alarm_control_panel.home_alarm','armed_home')) -%}
          #   30
          #   {% elif '18:00' <= time <= '20:25' %}
          #   175
          #   {% elif '05:30' <= time <= '07:30' %}
          #   175
          #   {%- elif(is_state('media_player.plex_plex_for_android_tv_bravia_vu1','playing')) -%}
          #   30
          #   {%- else -%}
          #   175
          #   {%- endif -%}
      - condition: state
        entity_id: alarm_control_panel.home_alarm
        state: "armed_home"
      - service: timer.start
        data:
          entity_id: timer.kitchenlight
          duration: >
            {% set time = states('sensor.time') %}
            {% if(is_state('alarm_control_panel.home_alarm','armed_home')) %}
              120
            {% elif '20:00' <= time  <= '23:59' %}
              {{60*60|int}}
            {% elif '00:00' <= time <= '05:29' %}
              {{2*60|int}}
            {% else %}
              {{5*60|int}}
            {%- endif -%}

  ### We have a button which modify how the kitchen dimming is effected when plex is playing
  # Turned on = Start timer
  - alias: Start kitchenwork timer
    trigger:
      - platform: state
        entity_id: input_boolean.kitchenwork
        to: "on"
    action:
      - service: timer.start
        data:
          entity_id: timer.kitchenwork
      - service: light.turn_on
        data:
          entity_id: light.kitchen_kitchen
          transition: 10
          #brightness: 175
  # Timer end = Turn off
  - alias: Turn off Kitchenwork timer
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.kitchenwork
    action:
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.kitchenwork

  - alias: Kitchenwork turned off
    trigger:
      - platform: state
        entity_id: input_boolean.kitchenwork
        to: "off"
    action:
      - service: light.turn_off
        data:
          entity_id: light.kitchen_kitchen
          transition: 10
      - service: timer.cancel
        data:
          entity_id: timer.kitchenwork
