---
timer:
  # When calling the start service on a timer that is already running, it resets
  # the duration it will need to finish and restart the timer without triggering
  # a canceled or finished event. This, for example, makes it easy to create
  # timed lights that get triggered by motion. Starting a timer triggers a
  # started event unless the timer is paused, in that case, it triggers a
  # restarted event.
  outsidebacklight:
    duration: "00:10:00"
    restore: true
# automation:

# ### Back Lights
# # Motion = Turn on
#   - alias: Turn on back lights when there is movement
#     trigger:
#       - platform: state
#         entity_id: binary_sensor.back_beam
#         to: 'on'
#     condition:
#       - condition: state  # 'night' condition: from sunset until sunrise
#         entity_id: sun.sun
#         state: 'below_horizon'
#     action:
#       - service: light.turn_on
#         data:
#           entity_id:
#             - light.outside_back
#       - service: timer.start
#         data:
#           entity_id: timer.outsidebacklight

#   ### Back Lights
#   # Timer end = Turn off
#   - alias: Turn off back lights 10 minutes after trigger
#     trigger:
#       platform: event
#       event_type: timer.finished
#       event_data:
#         entity_id: timer.outsidebacklight
#     action:
#       service: light.turn_off
#       data:
#         entity_id:
#           - light.outside_back
