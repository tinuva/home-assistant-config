---

timer:
  morning_routine:
    name: Morning Routine
    duration: '02:45:00'
  morning_main_bedroom:
    name: Morning fix main bedroom light
    duration: '00:01:00'
  morning_small_bedroom:
    name: Morning fix small bedroom light
    duration: '00:01:00'

# automation:
#   - alias: Turn off main_bathroom lights after timer finish
#     trigger:
#       platform: event
#       event_type: timer.finished
#       event_data:
#         entity_id: timer.morning_routine
#     action:
#       # Turn back on adaptive lightning
#       - service: switch.turn_on
#         target:
#           entity_id:
#             - switch.adaptive_lighting_main_bedroom
#             # - switch.adaptive_lighting_girl_bedroom
#       # Turn off all lights
#       - service: light.turn_off
#         data_template:
#           entity_id: >
#             {%- set data = namespace(lights_todo=[]) -%}
#             {%- set domains = ['light'] -%}
#             {%- for domain in domains -%}
#               {%- for item in states[domain]  -%}
#                 {%- if state_attr(item.entity_id, 'icon') == none %}
#                   {%- set data.lights_todo = data.lights_todo + [item.entity_id] %}
#                 {%- endif -%}
#               {%- endfor -%}
#             {%- endfor -%}
#             {{ data.lights_todo | join(",") }}

#   - id: '1654001290028'
#     alias: Wake-up light alarm main-bedroom
#     description: ''
#     use_blueprint:
#       path: sbyx/wake-up-light-alarm-with-sunrise-effect.yaml
#       input:
#         manual_time: 05:40:00
#         light_entity: light.main_bedroom_main_bedroom
#         check_entity: binary_sensor.workday_sensor
#         start_brightness: 30
#         end_brightness: 90
#         pre_sunrise_actions:
#           - service: switch.turn_off
#             target:
#               entity_id:
#                 - switch.adaptive_lighting_main_bedroom
#                 - switch.adaptive_lighting_sleep_mode_main_bedroom
#           - service: timer.start
#             target:
#               entity_id: timer.morning_routine
#             data:
#               duration: '02:45:00'
#           - service: automation.turn_off
#             target:
#               entity_id: automation.morning_fix_light_turning_off
#         post_sunrise_actions:
#           - service: automation.turn_on
#             target:
#               entity_id: automation.morning_fix_light_turning_off

#   - id: '1658380697189'
#     alias: Wake-up light alarm small-bedroom
#     description: ''
#     use_blueprint:
#       path: sbyx/wake-up-light-alarm-with-sunrise-effect.yaml
#       input:
#         manual_time: 05:40:00
#         light_entity: light.amy_bedroom_amy_bedroom
#         check_entity: binary_sensor.workday_sensor
#         start_brightness: 30
#         end_brightness: 90
#         pre_sunrise_actions:
#           - service: switch.turn_off
#             target:
#               entity_id:
#                 - switch.adaptive_lighting_girl_bedroom
#                 - switch.adaptive_lighting_sleep_mode_girl_bedroom

#   # Timer end = Turn off
#   - alias: Morning fix timer end
#     description: Turn on light when timer ends
#     mode: parallel
#     trigger:
#       - platform: event
#         event_type: timer.finished
#         event_data:
#           entity_id: timer.morning_main_bedroom
#       - platform: event
#         event_type: timer.finished
#         event_data:
#           entity_id: timer.morning_small_bedroom
#     action:
#       - service: light.turn_on
#         data_template:
#           entity_id: "{{ trigger.event.data.entity_id|replace('timer.morning_', 'light.') }}"
#           brightness_pct: 100

#   - alias: Morning fix light turning off
#     description: Start timer if turned off
#     mode: parallel
#     trigger:
#       - platform: state
#         entity_id: light.main_bedroom_main_bedroom, light.amy_bedroom_amy_bedroom
#         to: 'on'
#       - platform: state
#         entity_id: light.main_bedroom_main_bedroom, light.amy_bedroom_amy_bedroom
#         attribute: brightness
#     condition:
#       - condition: state
#         entity_id: timer.morning_routine
#         state: 'active'
#     action:
#       - service: timer.start
#         data_template:
#           entity_id: "{{ trigger.entity_id|replace('light.', 'timer.morning_') }}"
#           duration: '00:00:10'
