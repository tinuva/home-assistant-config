---

timer:
  # When calling the start service on a timer that is already running, it resets
  # the duration it will need to finish and restart the timer without triggering
  # a canceled or finished event. This, for example, makes it easy to create
  # timed lights that get triggered by motion. Starting a timer triggers a
  # started event unless the timer is paused, in that case, it triggers a
  # restarted event.
  dining:
    duration: '00:15:00'
    restore: true
  braai_room_lights:
    duration: '00:15:00'
    restore: true

automation:
  # Timer end = Turn off
  - alias: Turn off light when timer ends
    mode: parallel
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.dining
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.braai_room_lights
    action:
      - service: light.turn_off
        data_template:
          entity_id: "{{ trigger.event.data.entity_id|replace('timer.', 'light.') }}"

  - alias: Start timer if turned on during day
    mode: parallel
    trigger:
      - platform: state
        entity_id: light.lounge_dining, light.braai_room_braai_room
        to: 'on'
    condition:
      - condition: and
        conditions:
          - condition: sun
            after: sunrise
            after_offset: "00:59:00"
          - condition: sun
            before: sunset
            before_offset: "-00:59:00"
    action:
      - service: timer.start
        data_template:
          entity_id: "{{ trigger.entity_id|replace('light.', 'timer.') }}"
          duration: '00:02:30'
