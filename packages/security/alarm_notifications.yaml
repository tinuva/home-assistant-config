---
# AC Power Lost
# AC Power Restored

binary_sensor:
  - platform: template
    sensors:
      alarm_trouble:
        #entity_id: sensor.home_alarm_keypad
        value_template: "{{ state_attr('sensor.home_alarm_keypad', 'trouble') }}"
  - platform: template
    sensors:
      alarm_battery_trouble:
        #entity_id: sensor.home_alarm_keypad
        value_template: "{{ state_attr('sensor.home_alarm_keypad', 'bat_trouble') }}"
  - platform: template
    sensors:
      alarm_ac_power:
        #entity_id: sensor.home_alarm_keypad
        value_template: "{{ state_attr('sensor.home_alarm_keypad', 'ac_present') }}"

automation:
  ### Notify alarm zone state change
  - alias: Notify Alarm Zone Attributes
    description: Notify Alarm Zone Attributes when zone triggered
    mode: queued
    max: 25
    trigger:
      - platform: state
        from: "off"
        to: "on"
        entity_id:
          - binary_sensor.babyroom_pir
          - binary_sensor.babyroom_window
          - binary_sensor.back_beam
          - binary_sensor.back_garage_door
          - binary_sensor.back_garage_pir
          - binary_sensor.braai_room_pir
          - binary_sensor.ensuite_pir
          - binary_sensor.front_beam
          - binary_sensor.front_door
          - binary_sensor.front_garage_door_window
          - binary_sensor.kitchen_pir
          - binary_sensor.kitchen_window
          - binary_sensor.lounge_pir
          - binary_sensor.lounge_window
          - binary_sensor.main_bedroom_pir
          - binary_sensor.main_bedroom_window
          - binary_sensor.scullery_door
          - binary_sensor.sculllery_window
          - binary_sensor.spare_bedroom_pir
          - binary_sensor.study_pir
          - binary_sensor.study_window
          - binary_sensor.box_tamper
          - binary_sensor.panic
    action:
      - alias: "Set variables"
        variables:
          zone_nr_name: >
            Zone {{ trigger.to_state.attributes.zone }} - {{ trigger.to_state.attributes.friendly_name }}
      - choose:
          # ALARM TRIGGERED
          - conditions:
              - condition: template
                value_template: '{{ trigger.to_state.attributes.alarm == "on" }}'
            sequence:
              - service: script.log
                data:
                  icon: ':rotating_light:'
                  object: 'Home Alarm'
                  message: >
                    *ALARM TRIGGERED!* on {{ zone_nr_name }}
      - choose:
          # TAMPER
          - conditions:
              - condition: template
                value_template: '{{ trigger.to_state.attributes.tamper == "on" }}'
            sequence:
              - service: script.log
                data:
                  icon: ':rotating_light:'
                  object: 'Home Alarm'
                  message: >
                    {{ zone_nr_name }} in tampered state
      - choose:
          # FAULT
          - conditions:
              - condition: template
                value_template: '{{ trigger.to_state.attributes.fault == "on" }}'
            sequence:
              - service: script.log
                data:
                  icon: ':rotating_light:'
                  object: 'Home Alarm'
                  message: >
                    {{ zone_nr_name }} in fault state
      - choose:
          # LOW BATTERY
          - conditions:
              - condition: template
                value_template: '{{ trigger.to_state.attributes.low_battery == "on" }}'
            sequence:
              - service: script.log
                data:
                  icon: ':rotating_light:'
                  object: 'Home Alarm'
                  message: >
                    {{ zone_nr_name }} battery level is low - replace battery
      # - choose:
      #     # PANEL triggered so debug
      #     - conditions:
      #         - condition: state
      #           entity_id: alarm_control_panel.home_alarm
      #           state: 'triggered'
      #       sequence:
      #         - service: script.log
      #           data:
      #             icon: ':rotating_light:'
      #             object: 'Home Alarm'
      #             message: >
      #               {{ zone_nr_name }} debug log
      #               {{ trigger }}

# Zone 18 - Braai-room PIR debug log
# {
#     'id': '0',
#     'idx': '0',
#     'alias': None,
#     'platform': 'state',
#     'entity_id': 'binary_sensor.braai_room_pir',
#     'from_state': < state binary_sensor.braai_room_pir = off;last_tripped_time = 2024 - 02 - 29 T07: 34: 13.030548,
#     zone = 18,
#     bypassed = False,
#     open = False,
#     fault = False,
#     alarm = False,
#     tamper = False,
#     low_battery = False,
#     device_class = motion,
#     friendly_name = Braai - room PIR @ 2024 - 02 - 29 T07: 34: 19.954267 + 02: 00 > ,
#     'to_state': < state binary_sensor.braai_room_pir = on;last_tripped_time = 2024 - 02 - 29 T07: 34: 23.681189,
#     zone = 18,
#     bypassed = False,
#     open = True,
#     fault = False,
#     alarm = False,
#     tamper = False,
#     low_battery = False,
#     device_class = motion,
#     friendly_name = Braai - room PIR @ 2024 - 02 - 29 T07: 34: 23.681328 + 02: 00 > ,
#     'for': None,
#     'attribute': None,
#     'description': 'state of binary_sensor.braai_room_pir'
# }

  ##############################################################################################################################
  ### Older notifications below

  ### Notify alarm state change
  - id: '1586327112617'
    alias: Notify Alarm Armed State
    description: Notify when Alarm panel is armed or disarmed
    trigger:
      - entity_id: alarm_control_panel.home_alarm
        platform: state
    condition:
      - condition: template
        value_template: "{{ not is_state('alarm_control_panel.home_alarm', 'triggered') }}"
      - condition: template
        value_template: "{{ not is_state('alarm_control_panel.home_alarm', 'ready') }}"
    action:
      - choose:
          # If arming home or from disarming home - log instead of alert
          - conditions:
              - condition: or
                conditions:
                  - condition: template
                    value_template: >
                      {{ trigger.to_state.state == 'armed_home' }}
                  - condition: template
                    value_template: >
                      {{ trigger.from_state.state == 'armed_home' }}
                  - condition: template
                    value_template: >
                      {{ trigger.to_state.state == 'exit_delay_in_progress' }}
                  - condition: template
                    value_template: >
                      {{ trigger.to_state.state == 'pending' }}
                  - condition: template
                    value_template: >
                      {{ trigger.to_state.state == 'unavailable' }}
                  - condition: template
                    value_template: >
                      {{ trigger.from_state.state == 'unavailable' }}
                  - condition: template
                    value_template: >
                      {{ trigger.to_state.state == 'ready' }}
            sequence:
              - service: script.log
                data:
                  icon: ':rotating_light:'
                  object: 'Home Alarm'
                  message: >
                    Home alarm {{ trigger.to_state.state }}
        default:
          - service: script.alert
            data:
              icon: ':rotating_light:'
              object: 'Home Alarm'
              message: >
                Home alarm {{ trigger.to_state.state }}
          # - service: script.log
          #   data:
          #     icon: ':rotating_light:'
          #     object: 'Home Alarm'
          #     message: >
          #       Home alarm
          #       ```
          #       {{ trigger }}
          #       ```

  ### Notify sensor that triggered alarm --- WIP
  - id: '1586327112618'
    alias: Notify Alarm Armed Triggered
    description: Notify when Alarm panel is triggered
    trigger:
      - entity_id: alarm_control_panel.home_alarm
        platform: state
        to: 'triggered'
    condition: []
    action:
      - service: script.alert
        data:
          icon: ':rotating_light:'
          object: 'Home Alarm'
          message: >
            *ALARM TRIGGERED!* on: {{- '\n' -}}
            {{ states.sensor.armed_away.state }}

  ### Notify keypad error
  - alias: Notify when Alarm panel keypad has zone/sensor fault
    description: Notify when Alarm panel keypad has zone/sensor fault
    trigger:
      - entity_id: sensor.home_alarm_keypad
        platform: state
        to: 'zone/sensor fault'
      - entity_id: binary_sensor.alarm_trouble
        platform: state
        to: 'on'
      - entity_id: binary_sensor.alarm_trouble
        platform: state
        to: 'off'
    condition:
      - condition: template
        value_template: >
          {{ trigger.from_state.state != trigger.to_state.state }}
      - condition: template
        value_template: >
          {{ trigger.from_state.state != "unavailable" }}
      - condition: template
        value_template: >
          {{ trigger.from_state != None }}
    action:
      - service: script.log
        data:
          icon: ':rotating_light:'
          object: 'Home Alarm'
          message: >
            *ALARM Fault* {% if(states.binary_sensor.alarm_trouble.state == "off") %}Resolved{% endif %}{{- '\n' -}}
            Current keypad state: {{ states.sensor.home_alarm_keypad.state }}

  ### Notify battery error
  - alias: Notify when Alarm panel keypad has zone/sensor fault
    description: Notify when Alarm panel keypad has zone/sensor fault
    trigger:
      - entity_id: binary_sensor.alarm_battery_trouble
        platform: state
        to: 'on'
      - entity_id: binary_sensor.alarm_battery_trouble
        platform: state
        to: 'off'
    condition:
      - condition: template
        value_template: >
          {{ trigger.from_state != None }}
    action:
      - service: script.log
        data:
          icon: ':rotating_light:'
          object: 'Home Alarm'
          message: >
            *ALARM Battery Fault!* {% if (states.binary_sensor.alarm_battery_trouble.state == "off") %}Resolved{% endif %}

  ### Notify front beam stuck error
  - alias: Notify when front beam stuck on
    description: Notify when front beam stuck on
    trigger:
      - platform: state
        entity_id: binary_sensor.front_beam
        to: 'on' #'unavailable'
        for:
          hours: 0
          minutes: 15
          seconds: 0
    condition: []
    action:
      - service: script.log
        data:
          icon: ':rotating_light:'
          object: 'Home Alarm'
          message: >
             *ALARM Fault on Front Beam!* {% if (states.binary_sensor.front_beam.state == "off") %}Resolved{% endif %}

  - alias: Notify Repeat when front beam stuck on
    description: Notify Repeat when front beam stuck on
    trigger:
      - platform: time_pattern
        hours: '1'
    condition:
      - condition: state
        entity_id: binary_sensor.front_beam
        state: 'on'
        for:
          minutes: 30
    action:
      - service: script.log
        data:
          icon: ':rotating_light:'
          object: 'Home Alarm'
          message: >
            *ALARM Fault on Front Beam!* {% if (states.binary_sensor.front_beam.state == "off") %}Resolved{% endif %}
