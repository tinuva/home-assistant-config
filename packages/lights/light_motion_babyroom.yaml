---

timer:
  # When calling the start service on a timer that is already running, it resets
  # the duration it will need to finish and restart the timer without triggering
  # a canceled or finished event. This, for example, makes it easy to create
  # timed lights that get triggered by motion. Starting a timer triggers a
  # started event unless the timer is paused, in that case, it triggers a
  # restarted event.
  smallbedroomlight:
    duration: '00:10:00'

automation:
   # Timer end = Turn off
  - alias: Turn off smallbedroom lights after timer finish
    trigger:
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.smallbedroomlight
    action:
      service: light.turn_off
      data:
        entity_id: light.amy_bedroom_amy_bedroom
        transition: 10

  # Motion = Turn on
  - alias: Turn on smallbedroom lights when there is movement
    trigger:
      - platform: state
        entity_id: binary_sensor.babyroom_pir
        to: 'on'
    condition:
      - condition: and
        conditions:
          - condition: state  # 'night' condition: from sunset until sunrise
            entity_id: sun.sun
            state: 'below_horizon'
      - condition: or
        conditions:
          - condition: state
            entity_id: light.amy_bedroom_amy_bedroom
            state: 'off'
            for:
              seconds: 15
          - condition: state
            entity_id: light.amy_bedroom_amy_bedroom
            state: 'on'
    action:
      - service: timer.start
        data:
          entity_id: timer.smallbedroomlight
          duration: >
            {% set time = states('sensor.time') %}
            {% if(is_state('alarm_control_panel.home_alarm','armed_home')) %}
              {{2*60|int}}
            {% elif '20:00' <= time  <= '23:59' %}
              {{15*60|int}}
            {% elif '00:00' <= time <= '05:29' %}
              {{2*60|int}}
            {% else %}
              {{30*60|int}}
            {%- endif -%}
      - service: light.turn_on
        data_template:
          entity_id: light.amy_bedroom_amy_bedroom
          # transition: 10
          # brightness_pct: >-
          #   {% set hours = [[0,1],[500,25],[600,45],[630,55],[700,60],[730,65],
          #                 [800,70],[900,75],[1630,75],[1700,70],[1730,65],
          #                 [1800,55],[1830,50],[1900,40],[1930,35],[2000,30],
          #                 [2010,25],[2020,20],[2030,17],[2100,15],[2300,1]] %}
          #   {% set t = states('sensor.time').replace(':','')|int %}
          #   {% set ns = namespace(level = 0) %}
          #   {% for h in hours if t >= h[0] %}
          #     {% set ns.level = h[1] %}
          #   {% endfor %}
          #   {%- if(is_state('alarm_control_panel.home_alarm','armed_home')) -%}
          #   15
          #   {%- else -%}
          #   {{ ns.level }}
          #   {%- endif -%}

  # Light turn on and no timer then set brights
  - alias: Set brightness on smallbedroom light turn on
    trigger:
      - platform: state
        entity_id: light.amy_bedroom_amy_bedroom
        to: 'on'
    condition:
      - condition: and
        conditions:
          - condition: state
            entity_id: timer.smallbedroomlight
            state: 'idle'
    action:
      - service: light.turn_on
        data_template:
          entity_id: light.amy_bedroom_amy_bedroom
          # brightness_pct: >-
          #   {% set hours = [[0,1],[500,25],[600,45],[630,55],[700,60],[730,65],
          #                 [800,70],[900,75],[1630,75],[1700,70],[1730,65],
          #                 [1800,55],[1830,45],[1900,45],[1930,45],[2000,28],
          #                 [2010,24],[2020,22],[2030,20],[2100,18],[2300,1]] %}
          #   {% set t = states('sensor.time').replace(':','')|int %}
          #   {% set ns = namespace(level = 0) %}
          #   {% for h in hours if t >= h[0] %}
          #     {% set ns.level = h[1] %}
          #   {% endfor %}
          #   {%- if(is_state('alarm_control_panel.home_alarm','armed_home')) -%}
          #   15
          #   {%- else -%}
          #   {{ ns.level }}
          #   {%- endif -%}

  - alias: Sleep mode small bedroom lights
    trigger:
      - platform: state
        entity_id: binary_sensor.either_parent_phones_charging
      - platform: state
        entity_id: alarm_control_panel.home_alarm
      - platform: time
        at: "20:00:00"
      - platform: time
        at: "6:00:00"
    action:
      - choose:
          # Morning
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: binary_sensor.either_parent_phones_charging
                    state: 'on'
                  - condition: state
                    entity_id: alarm_control_panel.home_alarm
                    state: 'armed_home'
                  - condition: time
                    after: '20:29:59'
                  - condition: time
                    before: '6:00:00'
            sequence:
              - service: switch.turn_on
                data:
                  entity_id: switch.adaptive_lighting_sleep_mode_small_bedroom
          - conditions:
              - condition: state
                entity_id: binary_sensor.either_parent_phones_charging
                state: 'off'
              - condition: state
                entity_id: alarm_control_panel.home_alarm
                state: 'disarmed'
            sequence:
              - service: switch.turn_off
                data:
                  entity_id: switch.adaptive_lighting_sleep_mode_small_bedroom
