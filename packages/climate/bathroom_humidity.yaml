---

automation:
  - alias: "Turn on Master Bathroom Fan"
    trigger:
      - platform: state
        entity_id: sensor.main_bathroom_humidity, sensor.main_bedroom_humidity   # 1st bathroom 2nd main bedroom
    condition:
      - condition: template
        value_template: "{{ (states.sensor.main_bathroom_humidity.state|float - states.sensor.main_bedroom_humidity.state|float > 15) or (states.sensor.main_bathroom_humidity.state|float == 99.9) or states.binary_sensor.master_bathroom_humidity_rising.attributes['gradient']|float > 0.04 }}"
      - condition: or
        conditions:
          - condition: state  # 'day' condition: from sunrise until sunset
            entity_id: sun.sun
            state: 'above_horizon'
          - condition: state
            entity_id: light.main_bathroom
            state: 'on'
      - condition: not
        conditions:
          - condition: state
            entity_id: sensor.front_bathroom_temperature
            state: 'unavailable'
    action:
      - service: timer.start
        data:
          entity_id: timer.main_bathroom
          duration: >
            {% set time = states('sensor.time') %}
            {% if '20:00' <= time  <= '23:59' %}
              {{30*60|int}}
            {% elif '00:00' <= time <= '04:30' %}
              {{10*60|int}}
            {% elif '04:30' < time <= '08:29' %}
              {{45*60|int}}
            {% else %}
              {{25*60|int}}
            {%- endif -%}
      - service: light.turn_on
        entity_id: light.main_bathroom

  - alias: "Turn off Master Bathroom Fan"
    trigger:
      - platform: state
        entity_id: sensor.main_bathroom_humidity, sensor.main_bedroom_humidity   # 1st bathroom 2nd main bedroom
      - platform: state
        entity_id: light.main_bathroom
        to: 'on'
        for:
          minutes: 20
    condition:
      - condition: template # bathroom vs main bedroom
        value_template: "{{states.sensor.main_bathroom_humidity.state|float - states.sensor.main_bedroom_humidity.state|float < 13 and states.light.main_bathroom.state == 'on' and states.binary_sensor.master_bathroom_humidity_falling.state == 'off' and states.binary_sensor.master_bathroom_humidity_rising.state == 'off'}}"
      - condition: state  # 'day' condition: from sunrise until sunset
        entity_id: sun.sun
        state: 'above_horizon'
    action:
      - service: light.turn_off
        entity_id: light.main_bathroom
