import{s as t,dH as e,cY as r,dh as a,dj as s,dk as n,di as o,bj as i,bk as c,bl as d,bn as l,da as u,l as h,cL as p,bX as b,y as m}from"./card-67eaecc9.js";import{h as y,M as g}from"./lazyload-7e37567e.js";import{m as w}from"./audio-557099cb.js";let _=class extends t{constructor(){super(...arguments),this.controls=!1,this._webrtcTask=new e(this,this._getWebRTCCardElement,(()=>[1]))}async play(){return this._getPlayer()?.play()}async pause(){this._getPlayer()?.pause()}async mute(){const t=this._getPlayer();t&&(t.muted=!0)}async unmute(){const t=this._getPlayer();t&&(t.muted=!1)}isMuted(){return this._getPlayer()?.muted??!0}async seek(t){const e=this._getPlayer();e&&(e.currentTime=t)}async setControls(t){const e=this._getPlayer();e&&(e.controls=t??this.controls)}isPaused(){return this._getPlayer()?.paused??!0}connectedCallback(){super.connectedCallback(),this.requestUpdate()}_getPlayer(){const t=this.renderRoot?.querySelector("#webrtc");return t?.video??null}async _getWebRTCCardElement(){return await customElements.whenDefined("webrtc-camera"),customElements.get("webrtc-camera")}_createWebRTC(){const t=this._webrtcTask.value;if(t&&this.hass&&this.cameraConfig){const e=new t,r={...this.cameraConfig.webrtc_card};return r.url||r.entity||!this.cameraEndpoints?.webrtcCard||(r.url=this.cameraEndpoints.webrtcCard.endpoint),e.setConfig(r),e.hass=this.hass,e}return null}render(){return r(this,this._webrtcTask,(()=>{let t;try{t=this._createWebRTC()}catch(t){return p(this,t instanceof b?t.message:h("error.webrtc_card_reported_error")+": "+t.message,{context:t.context})}return t&&(t.id="webrtc"),m`${t}`}),{inProgressFunc:()=>u({message:h("error.webrtc_card_waiting"),cardWideConfig:this.cardWideConfig})})}updated(){this.updateComplete.then((()=>{const t=this._getPlayer();t&&(t.onloadeddata=()=>{this.controls&&y(t,g),a(this,t,{player:this,capabilities:{supportsPause:!0,hasAudio:w(t)}})},t.onplay=()=>s(this),t.onpause=()=>n(this),t.onvolumechange=()=>o(this),t.controls=this.controls)}))}static get styles(){return i(":host {\n  width: 100%;\n  height: 100%;\n  display: block;\n}\n\n/* Don't drop shadow or have radius for nested webrtc card */\n#webrtc ha-card {\n  border-radius: 0px;\n  margin: 0px;\n  box-shadow: none;\n}\n\nha-card,\ndiv.fix-safari,\n#video {\n  background: unset;\n  background-color: unset;\n}\n\n#webrtc #video {\n  object-fit: var(--frigate-card-media-layout-fit, contain);\n  object-position: var(--frigate-card-media-layout-position-x, 50%) var(--frigate-card-media-layout-position-y, 50%);\n}")}};c([d({attribute:!1})],_.prototype,"cameraConfig",void 0),c([d({attribute:!1})],_.prototype,"cameraEndpoints",void 0),c([d({attribute:!1})],_.prototype,"cardWideConfig",void 0),c([d({attribute:!0,type:Boolean})],_.prototype,"controls",void 0),_=c([l("frigate-card-live-webrtc-card")],_);export{_ as FrigateCardLiveWebRTCCard};
